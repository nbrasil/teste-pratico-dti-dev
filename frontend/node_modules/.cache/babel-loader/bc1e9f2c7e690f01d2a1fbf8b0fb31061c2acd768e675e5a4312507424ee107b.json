{"ast":null,"code":"var _jsxFileName = \"/Users/nicollybrasil/Desktop/FullStack/teste-dti-dev/frontend/src/components/DroneStatusDashboard.js\",\n  _s = $RefreshSig$();\n// src/components/DroneStatusDashboard.js\nimport React, { useState, useEffect } from 'react';\nimport './DroneStatusDashboard.css';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DroneStatusDashboard() {\n  _s();\n  // Começamos com um array vazio\n\n  const [drones, setDrones] = useState([]);\n\n  // Usamos useEffect para buscar dados quando o componente monta e depois periodicamente\n\n  useEffect(() => {\n    const fetchDrones = async () => {\n      try {\n        const response = await api.get('/drones/status');\n        setDrones(response.data);\n      } catch (error) {\n        console.error('Erro ao buscar status dos drones:', error);\n      }\n    };\n    fetchDrones(); // Busca inicial\n\n    // Configura um intervalo para buscar os dados a cada 5 segundos\n\n    const intervalId = setInterval(fetchDrones, 5000);\n\n    // Função de limpeza: O React executa isso quando o componente \"desmonta\"\n\n    // Isso previne vazamentos de memória e bugs.\n\n    return () => clearInterval(intervalId);\n  }, []); // O array vazio [] garante que o useEffect rode apenas uma vez na montagem\n\n  // Função auxiliar para obter a cor do status\n\n  const getStatusColor = status => {\n    switch (status) {\n      case 'Idle':\n        return 'green';\n      case 'Em voo':\n        return 'blue';\n      case 'Retornando':\n        return 'orange';\n      case 'Carregando':\n        return 'purple';\n      default:\n        return 'gray';\n    }\n  };\n\n  // ... a função getStatusColor e o JSX do return continuam os mesmos\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Status dos Drones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drones-list\",\n      children: drones.map(drone => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drone-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Drone #\", drone.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: getStatusColor(drone.status),\n              fontWeight: 'bold'\n            },\n            children: drone.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Bateria: \", drone.bateria, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, drone.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(DroneStatusDashboard, \"QGDturtHmeiyLcn+bIDMKE2EI58=\");\n_c = DroneStatusDashboard;\nexport default DroneStatusDashboard;\nvar _c;\n$RefreshReg$(_c, \"DroneStatusDashboard\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","DroneStatusDashboard","_s","drones","setDrones","fetchDrones","response","get","data","error","console","intervalId","setInterval","clearInterval","getStatusColor","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","drone","id","style","color","fontWeight","bateria","_c","$RefreshReg$"],"sources":["/Users/nicollybrasil/Desktop/FullStack/teste-dti-dev/frontend/src/components/DroneStatusDashboard.js"],"sourcesContent":["// src/components/DroneStatusDashboard.js\nimport React, { useState, useEffect } from 'react';\nimport './DroneStatusDashboard.css';\n\nimport api from '../services/api';\n\n\n\nfunction DroneStatusDashboard() {\n\n    // Começamos com um array vazio\n\n    const [drones, setDrones] = useState([]);\n\n\n\n    // Usamos useEffect para buscar dados quando o componente monta e depois periodicamente\n\n    useEffect(() => {\n\n        const fetchDrones = async () => {\n\n            try {\n\n                const response = await api.get('/drones/status');\n\n                setDrones(response.data);\n\n            } catch (error) {\n\n                console.error('Erro ao buscar status dos drones:', error);\n\n            }\n\n        };\n\n\n\n        fetchDrones(); // Busca inicial\n\n\n\n        // Configura um intervalo para buscar os dados a cada 5 segundos\n\n        const intervalId = setInterval(fetchDrones, 5000);\n\n\n\n        // Função de limpeza: O React executa isso quando o componente \"desmonta\"\n\n        // Isso previne vazamentos de memória e bugs.\n\n        return () => clearInterval(intervalId);\n\n    }, []); // O array vazio [] garante que o useEffect rode apenas uma vez na montagem\n\n    // Função auxiliar para obter a cor do status\n\n    const getStatusColor = (status) => {\n\n        switch (status) {\n\n            case 'Idle': return 'green';\n\n            case 'Em voo': return 'blue';\n\n            case 'Retornando': return 'orange';\n\n            case 'Carregando': return 'purple';\n\n            default: return 'gray';\n\n        }\n\n    };\n\n    // ... a função getStatusColor e o JSX do return continuam os mesmos\n\n    return (\n\n        <div className=\"dashboard-container\">\n\n            <h2>Status dos Drones</h2>\n\n            <div className=\"drones-list\">\n\n                {drones.map(drone => (\n\n                    <div className=\"drone-card\" key={drone.id}>\n\n                        <h3>Drone #{drone.id}</h3>\n\n                        <p>\n\n                            Status: <span style={{ color: getStatusColor(drone.status), fontWeight: 'bold' }}>\n\n                                {drone.status}\n\n                            </span>\n\n                        </p>\n\n                        <p>Bateria: {drone.bateria}%</p>\n\n                    </div>\n\n                ))}\n\n            </div>\n\n        </div>\n\n    );\n\n}\n\n\n\nexport default DroneStatusDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}