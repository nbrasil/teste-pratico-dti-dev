{"ast":null,"code":"var _jsxFileName = \"/Users/nicollybrasil/Desktop/FullStack/teste-dti-dev/frontend/src/components/SimulationControl.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport api from '../services/api';\nimport './SimulationControl.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SimulationControl({\n  onSimulationComplete,\n  onClear\n}) {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const handleStartSimulation = async () => {\n    setIsLoading(true);\n    setMessage('Alocando entregas...');\n    try {\n      // 1. Aciona o algoritmo de alocação no backend\n      const alocacaoResponse = await api.post('/entregas/alocar');\n      setMessage(alocacaoResponse.data.message || 'Alocação concluída. Buscando rotas...');\n\n      // 2. Busca os voos que foram criados\n      const voosResponse = await api.get('/voos');\n\n      // 3. Passa os dados dos voos para o componente pai (App.js)\n      onSimulationComplete(voosResponse.data);\n    } catch (error) {\n      console.error('Erro ao iniciar a simulação:', error);\n      setMessage('Falha na simulação.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simulation-control-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartSimulation,\n      disabled: isLoading,\n      children: isLoading ? 'Processando...' : 'Iniciar Simulação e Planejar Rotas'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClear,\n      className: \"clear-button\",\n      children: \"Limpar Rotas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"simulation-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(SimulationControl, \"9B/uvihY/IWcvmwVq/yXBzfMk5g=\");\n_c = SimulationControl;\nexport default SimulationControl;\nvar _c;\n$RefreshReg$(_c, \"SimulationControl\");","map":{"version":3,"names":["React","useState","api","jsxDEV","_jsxDEV","SimulationControl","onSimulationComplete","onClear","_s","isLoading","setIsLoading","message","setMessage","handleStartSimulation","alocacaoResponse","post","data","voosResponse","get","error","console","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nicollybrasil/Desktop/FullStack/teste-dti-dev/frontend/src/components/SimulationControl.js"],"sourcesContent":["import React, { useState } from 'react';\nimport api from '../services/api';\nimport './SimulationControl.css';\n\nfunction SimulationControl({ onSimulationComplete, onClear }) {\n    const [isLoading, setIsLoading] = useState(false);\n    const [message, setMessage] = useState('');\n\n    const handleStartSimulation = async () => {\n        setIsLoading(true);\n        setMessage('Alocando entregas...');\n        \n        try {\n            // 1. Aciona o algoritmo de alocação no backend\n            const alocacaoResponse = await api.post('/entregas/alocar');\n            setMessage(alocacaoResponse.data.message || 'Alocação concluída. Buscando rotas...');\n            \n            // 2. Busca os voos que foram criados\n            const voosResponse = await api.get('/voos');\n            \n            // 3. Passa os dados dos voos para o componente pai (App.js)\n            onSimulationComplete(voosResponse.data);\n            \n        } catch (error) {\n            console.error('Erro ao iniciar a simulação:', error);\n            setMessage('Falha na simulação.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"simulation-control-container\">\n            <button onClick={handleStartSimulation} disabled={isLoading}>\n                {isLoading ? 'Processando...' : 'Iniciar Simulação e Planejar Rotas'}\n            </button>\n            <button onClick={onClear} className=\"clear-button\">Limpar Rotas</button>\n            {message && <p className=\"simulation-message\">{message}</p>}\n        </div>\n    );\n}\n\nexport default SimulationControl;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,iBAAiBA,CAAC;EAAEC,oBAAoB;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC1D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACtCH,YAAY,CAAC,IAAI,CAAC;IAClBE,UAAU,CAAC,sBAAsB,CAAC;IAElC,IAAI;MACA;MACA,MAAME,gBAAgB,GAAG,MAAMZ,GAAG,CAACa,IAAI,CAAC,kBAAkB,CAAC;MAC3DH,UAAU,CAACE,gBAAgB,CAACE,IAAI,CAACL,OAAO,IAAI,uCAAuC,CAAC;;MAEpF;MACA,MAAMM,YAAY,GAAG,MAAMf,GAAG,CAACgB,GAAG,CAAC,OAAO,CAAC;;MAE3C;MACAZ,oBAAoB,CAACW,YAAY,CAACD,IAAI,CAAC;IAE3C,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDP,UAAU,CAAC,qBAAqB,CAAC;IACrC,CAAC,SAAS;MACNF,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,oBACIN,OAAA;IAAKiB,SAAS,EAAC,8BAA8B;IAAAC,QAAA,gBACzClB,OAAA;MAAQmB,OAAO,EAAEV,qBAAsB;MAACW,QAAQ,EAAEf,SAAU;MAAAa,QAAA,EACvDb,SAAS,GAAG,gBAAgB,GAAG;IAAoC;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC,eACTxB,OAAA;MAAQmB,OAAO,EAAEhB,OAAQ;MAACc,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACvEjB,OAAO,iBAAIP,OAAA;MAAGiB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAEX;IAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEd;AAACpB,EAAA,CApCQH,iBAAiB;AAAAwB,EAAA,GAAjBxB,iBAAiB;AAsC1B,eAAeA,iBAAiB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}