{"ast":null,"code":"var _jsxFileName = \"/Users/nicollybrasil/Desktop/FullStack/teste-dti-dev/frontend/src/components/DroneStatusDashboard.js\",\n  _s = $RefreshSig$();\n// src/components/DroneStatusDashboard.js\n\nimport React, { useState, useEffect } from 'react';\nimport './DroneStatusDashboard.css';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DroneStatusDashboard() {\n  _s();\n  // Começamos com um array vazio\n  const [drones, setDrones] = useState([]);\n\n  // Usamos useEffect para buscar dados quando o componente monta e depois periodicamente\n  useEffect(() => {\n    const fetchDrones = async () => {\n      try {\n        const response = await api.get('/drones/status');\n        setDrones(response.data);\n      } catch (error) {\n        console.error('Erro ao buscar status dos drones:', error);\n      }\n    };\n    fetchDrones(); // Busca inicial\n\n    // Configura um intervalo para buscar os dados a cada 5 segundos\n    const intervalId = setInterval(fetchDrones, 5000);\n\n    // Função de limpeza: O React executa isso quando o componente \"desmonta\"\n    // Isso previne vazamentos de memória e bugs.\n    return () => clearInterval(intervalId);\n  }, []); // O array vazio [] garante que o useEffect rode apenas uma vez na montagem\n\n  // ... a função getStatusColor e o JSX do return continuam os mesmos\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Status dos Drones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drones-list\",\n      children: drones.map(drone => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drone-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Drone #\", drone.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: getStatusColor(drone.status),\n              fontWeight: 'bold'\n            },\n            children: drone.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Bateria: \", drone.bateria, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)]\n      }, drone.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(DroneStatusDashboard, \"QGDturtHmeiyLcn+bIDMKE2EI58=\");\n_c = DroneStatusDashboard;\nexport default DroneStatusDashboard;\nvar _c;\n$RefreshReg$(_c, \"DroneStatusDashboard\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","DroneStatusDashboard","_s","drones","setDrones","fetchDrones","response","get","data","error","console","intervalId","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","drone","id","style","color","getStatusColor","status","fontWeight","bateria","_c","$RefreshReg$"],"sources":["/Users/nicollybrasil/Desktop/FullStack/teste-dti-dev/frontend/src/components/DroneStatusDashboard.js"],"sourcesContent":["// src/components/DroneStatusDashboard.js\n\nimport React, { useState, useEffect } from 'react';\nimport './DroneStatusDashboard.css';\nimport api from '../services/api';\n\nfunction DroneStatusDashboard() {\n    // Começamos com um array vazio\n    const [drones, setDrones] = useState([]);\n\n    // Usamos useEffect para buscar dados quando o componente monta e depois periodicamente\n    useEffect(() => {\n        const fetchDrones = async () => {\n            try {\n                const response = await api.get('/drones/status');\n                setDrones(response.data);\n            } catch (error) {\n                console.error('Erro ao buscar status dos drones:', error);\n            }\n        };\n\n        fetchDrones(); // Busca inicial\n\n        // Configura um intervalo para buscar os dados a cada 5 segundos\n        const intervalId = setInterval(fetchDrones, 5000);\n\n        // Função de limpeza: O React executa isso quando o componente \"desmonta\"\n        // Isso previne vazamentos de memória e bugs.\n        return () => clearInterval(intervalId);\n    }, []); // O array vazio [] garante que o useEffect rode apenas uma vez na montagem\n\n    // ... a função getStatusColor e o JSX do return continuam os mesmos\n    return (\n        <div className=\"dashboard-container\">\n            <h2>Status dos Drones</h2>\n            <div className=\"drones-list\">\n                {drones.map(drone => (\n                    <div className=\"drone-card\" key={drone.id}>\n                        <h3>Drone #{drone.id}</h3>\n                        <p>\n                            Status: <span style={{ color: getStatusColor(drone.status), fontWeight: 'bold' }}>\n                                {drone.status}\n                            </span>\n                        </p>\n                        <p>Bateria: {drone.bateria}%</p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default DroneStatusDashboard;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,4BAA4B;AACnC,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC5B;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAC,gBAAgB,CAAC;QAChDH,SAAS,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC7D;IACJ,CAAC;IAEDJ,WAAW,CAAC,CAAC,CAAC,CAAC;;IAEf;IACA,MAAMM,UAAU,GAAGC,WAAW,CAACP,WAAW,EAAE,IAAI,CAAC;;IAEjD;IACA;IACA,OAAO,MAAMQ,aAAa,CAACF,UAAU,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,oBACIX,OAAA;IAAKc,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAChCf,OAAA;MAAAe,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BnB,OAAA;MAAKc,SAAS,EAAC,aAAa;MAAAC,QAAA,EACvBZ,MAAM,CAACiB,GAAG,CAACC,KAAK,iBACbrB,OAAA;QAAKc,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBf,OAAA;UAAAe,QAAA,GAAI,SAAO,EAACM,KAAK,CAACC,EAAE;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1BnB,OAAA;UAAAe,QAAA,GAAG,UACS,eAAAf,OAAA;YAAMuB,KAAK,EAAE;cAAEC,KAAK,EAAEC,cAAc,CAACJ,KAAK,CAACK,MAAM,CAAC;cAAEC,UAAU,EAAE;YAAO,CAAE;YAAAZ,QAAA,EAC5EM,KAAK,CAACK;UAAM;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eACJnB,OAAA;UAAAe,QAAA,GAAG,WAAS,EAACM,KAAK,CAACO,OAAO,EAAC,GAAC;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GAPHE,KAAK,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQpC,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACjB,EAAA,CA5CQD,oBAAoB;AAAA4B,EAAA,GAApB5B,oBAAoB;AA8C7B,eAAeA,oBAAoB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}